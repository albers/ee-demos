#javax.validation.constraints.AssertFalse.message=muss falsch sein
#javax.validation.constraints.AssertTrue.message=muss wahr sein
#javax.validation.constraints.DecimalMax.message=muss kleinergleich {value} sein
#javax.validation.constraints.DecimalMin.message=muss grössergleich {value} sein
#javax.validation.constraints.Digits.message=numerischer Wert außerhalb erlaubten Wertebereichs (<{integer} Ziffern>.<{fraction} Ziffern> erwarted)
#javax.validation.constraints.Future.message=muss in der Zukunft liegen
#javax.validation.constraints.Max.message=muss kleinergleich {value} sein
#javax.validation.constraints.Min.message=muss grössergleich {value} sein
#javax.validation.constraints.NotNull.message=kann nicht null sein
#javax.validation.constraints.Null.message=muss null sein
#javax.validation.constraints.Past.message=muss in der Vergangenheit liegen
#javax.validation.constraints.Pattern.message=muss auf Ausdruck "{regexp}" passen
javax.validation.constraints.Size.message=muss zwischen {min} und {max} lang sein

de.gedoplan.baselibs.utils.validation.constraint.NotEmpty.message=darf nicht leer sein
de.gedoplan.baselibs.utils.validation.constraint.ValidMailAddress.message=muss gültige Mail-Adresse inkl. '@' und Domäne sein
de.gedoplan.baselibs.utils.validation.constraint.ValidTelNumber.message=muss gültige Telefonnummer nach DIN 5008 sein (+## #### ##### oder +## #### #####-##)
